{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9325630,"sourceType":"datasetVersion","datasetId":5649662},{"sourceId":11490304,"sourceType":"datasetVersion","datasetId":7202556}],"dockerImageVersionId":31040,"isInternetEnabled":false,"language":"python","sourceType":"script","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [markdown]\n# Import Packages\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:38:07.011323Z\",\"iopub.execute_input\":\"2025-06-09T05:38:07.011623Z\",\"iopub.status.idle\":\"2025-06-09T05:38:07.017568Z\",\"shell.execute_reply.started\":\"2025-06-09T05:38:07.011600Z\",\"shell.execute_reply\":\"2025-06-09T05:38:07.016770Z\"}}\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVR\nfrom sklearn.metrics import mean_squared_error, r2_score\nimport warnings\nwarnings.filterwarnings('ignore', category=FutureWarning)\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay, roc_curve, auc\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.ensemble import RandomForestClassifier\n\n# %% [markdown]\n# Import Dataset\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:07.109621Z\",\"iopub.execute_input\":\"2025-06-09T05:25:07.109989Z\",\"iopub.status.idle\":\"2025-06-09T05:25:07.146443Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:07.109963Z\",\"shell.execute_reply\":\"2025-06-09T05:25:07.145312Z\"}}\ndf = pd.read_csv('/kaggle/input/mental-health-and-technology-usage-dataset/mental_health_and_technology_usage_2024.csv')\ndf.head()\n\n# %% [markdown]\n# Describe dataset\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:07.148097Z\",\"iopub.execute_input\":\"2025-06-09T05:25:07.148426Z\",\"iopub.status.idle\":\"2025-06-09T05:25:07.176747Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:07.148404Z\",\"shell.execute_reply\":\"2025-06-09T05:25:07.175827Z\"}}\ndf.describe()\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:07.177688Z\",\"iopub.execute_input\":\"2025-06-09T05:25:07.177988Z\",\"iopub.status.idle\":\"2025-06-09T05:25:07.185778Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:07.177964Z\",\"shell.execute_reply\":\"2025-06-09T05:25:07.185011Z\"}}\ndf.dtypes\n\n# %% [markdown]\n# Check for duplication of rows in dataset\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:07.187586Z\",\"iopub.execute_input\":\"2025-06-09T05:25:07.187855Z\",\"iopub.status.idle\":\"2025-06-09T05:25:07.214755Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:07.187834Z\",\"shell.execute_reply\":\"2025-06-09T05:25:07.213602Z\"}}\ndf.duplicated().sum()\n\n# %% [markdown]\n# Explore means of numerical variables in dataset\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:07.215550Z\",\"iopub.execute_input\":\"2025-06-09T05:25:07.215853Z\",\"iopub.status.idle\":\"2025-06-09T05:25:07.242026Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:07.215832Z\",\"shell.execute_reply\":\"2025-06-09T05:25:07.241100Z\"}}\n df.groupby(['Gender','Mental_Health_Status', 'Stress_Level']).agg({\n    'Screen_Time_Hours': 'mean',\n    'Sleep_Hours': 'mean',\n    'Technology_Usage_Hours':'mean',\n    'Social_Media_Usage_Hours': 'mean',\n    'Gaming_Hours': 'mean',\n    'Physical_Activity_Hours':'mean'\n}).reset_index()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:07.242992Z\",\"iopub.execute_input\":\"2025-06-09T05:25:07.243369Z\",\"iopub.status.idle\":\"2025-06-09T05:25:07.307948Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:07.243348Z\",\"shell.execute_reply\":\"2025-06-09T05:25:07.306912Z\"}}\n# Summary statistics by Mental Health Status\nsummary_stats = df.groupby('Mental_Health_Status').describe()\nprint(summary_stats)\n\n# %% [markdown]\n# Exploratory Data Analysis (EDA)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:07.309007Z\",\"iopub.execute_input\":\"2025-06-09T05:25:07.309348Z\",\"iopub.status.idle\":\"2025-06-09T05:25:07.627983Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:07.309316Z\",\"shell.execute_reply\":\"2025-06-09T05:25:07.627004Z\"}}\nplt.figure(figsize=(10, 6))\nsns.histplot(df['Technology_Usage_Hours'], kde=True, bins=30, palette='Set2')\nplt.title('Technology_Usage_Hours')\nplt.xlabel('Technology_Usage_Hours')\nplt.ylabel('Frequency')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:07.630331Z\",\"iopub.execute_input\":\"2025-06-09T05:25:07.630566Z\",\"iopub.status.idle\":\"2025-06-09T05:25:07.823981Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:07.630547Z\",\"shell.execute_reply\":\"2025-06-09T05:25:07.823200Z\"}}\nplt.figure(figsize=(12, 8))\nscreen_devices = ['Social_Media_Usage_Hours', 'Gaming_Hours', 'Screen_Time_Hours', 'Technology_Usage_Hours']\nsns.barplot(x=screen_devices, y=df[screen_devices].mean(), palette='Set2')\nplt.title('Average Hours Spent on Different Devices', fontsize=14)\nplt.xlabel('Device Type')\nplt.ylabel('Average Hours')\nplt.grid(True, alpha=0.3)\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:07.825074Z\",\"iopub.execute_input\":\"2025-06-09T05:25:07.825468Z\",\"iopub.status.idle\":\"2025-06-09T05:25:08.104761Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:07.825448Z\",\"shell.execute_reply\":\"2025-06-09T05:25:08.103993Z\"}}\n# Bar plot for Technology Usage Hours by Gender\nplt.figure(figsize=(8,5))\nsns.barplot(x='Gender', y='Technology_Usage_Hours', data=df, palette='Set2')\nplt.title('Technology Usage Hours by Gender')\nplt.xlabel('Gender')\nplt.ylabel('Technology Usage Hours')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:08.105610Z\",\"iopub.execute_input\":\"2025-06-09T05:25:08.105823Z\",\"iopub.status.idle\":\"2025-06-09T05:25:08.210310Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:08.105807Z\",\"shell.execute_reply\":\"2025-06-09T05:25:08.209398Z\"}}\n# Pie chart for Gender Distribution\nplt.figure(figsize=(6,6))\ndf['Gender'].value_counts().plot.pie(autopct='%1.1f%%', startangle=90)\nplt.title('Gender Distribution')\nplt.ylabel('')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:08.211309Z\",\"iopub.execute_input\":\"2025-06-09T05:25:08.211612Z\",\"iopub.status.idle\":\"2025-06-09T05:25:08.372398Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:08.211586Z\",\"shell.execute_reply\":\"2025-06-09T05:25:08.371336Z\"}}\n# Box plot for Sleep Hours by Gender\nplt.figure(figsize=(8,5))\nsns.boxplot(x='Gender', y='Sleep_Hours', data=df, palette='Set2')\nplt.title('Sleep Hours by Gender')\nplt.xlabel('Gender')\nplt.ylabel('Sleep Hours')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:08.373583Z\",\"iopub.execute_input\":\"2025-06-09T05:25:08.373839Z\",\"iopub.status.idle\":\"2025-06-09T05:25:09.229005Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:08.373817Z\",\"shell.execute_reply\":\"2025-06-09T05:25:09.228186Z\"}}\n# Scatter plot for Technology Usage Hours vs Screen Time Hours\nplt.figure(figsize=(8,5))\nsns.scatterplot(x='Technology_Usage_Hours', y='Screen_Time_Hours', data=df, hue='Mental_Health_Status', palette='Set2')\nplt.title('Technology Usage Hours vs Screen Time Hours')\nplt.xlabel('Technology Usage Hours')\nplt.ylabel('Screen Time Hours')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:09.229859Z\",\"iopub.execute_input\":\"2025-06-09T05:25:09.230094Z\",\"iopub.status.idle\":\"2025-06-09T05:25:10.059125Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:09.230077Z\",\"shell.execute_reply\":\"2025-06-09T05:25:10.058172Z\"}}\n# Scatter plot for Age vs Screen Time Hours\nplt.figure(figsize=(8,5))\nsns.scatterplot(x='Age', y='Screen_Time_Hours', data=df, hue='Gender', palette='Set2')\nplt.title('Age vs Screen Time Hours')\nplt.xlabel('Age')\nplt.ylabel('Screen Time (Hours)')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:10.060322Z\",\"iopub.execute_input\":\"2025-06-09T05:25:10.060633Z\",\"iopub.status.idle\":\"2025-06-09T05:25:10.242700Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:10.060606Z\",\"shell.execute_reply\":\"2025-06-09T05:25:10.241950Z\"}}\n# Check the unique values in the Stress_Level column\nprint(df['Stress_Level'].unique())\n\n# Convert categorical stress levels to numeric values\nstress_mapping = {'Low': 1, 'Medium': 2, 'High': 3}\ndf['Stress_Level'] = df['Stress_Level'].map(stress_mapping)\n\n# Now create the boxplot again\nplt.figure(figsize=(8,5))\nsns.boxplot(x='Gender', y='Stress_Level', data=df, palette='Set2')\nplt.title('Stress Levels by Gender')\nplt.xlabel('Gender')\nplt.ylabel('Stress Level')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:10.243536Z\",\"iopub.execute_input\":\"2025-06-09T05:25:10.243826Z\",\"iopub.status.idle\":\"2025-06-09T05:25:10.431417Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:10.243804Z\",\"shell.execute_reply\":\"2025-06-09T05:25:10.430397Z\"}}\n# Box plot for Stress Levels by Mental Health Status\nplt.figure(figsize=(8,5))\nsns.boxplot(x='Mental_Health_Status', y='Stress_Level', data=df, palette='Set2')\nplt.title('Stress Levels by Mental Health Status')\nplt.xlabel('Mental Health Status')\nplt.ylabel('Stress Level')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:10.432444Z\",\"iopub.execute_input\":\"2025-06-09T05:25:10.432822Z\",\"iopub.status.idle\":\"2025-06-09T05:25:11.300004Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:10.432797Z\",\"shell.execute_reply\":\"2025-06-09T05:25:11.299184Z\"}}\n# Scatter plot for Sleep Hours vs Technology Usage Hours\nplt.figure(figsize=(8,5))\nsns.scatterplot(x='Sleep_Hours', y='Technology_Usage_Hours', data=df, hue='Mental_Health_Status', palette='Set2')\nplt.title('Sleep Hours vs Technology Usage Hours')\nplt.xlabel('Sleep Hours')\nplt.ylabel('Technology Usage Hours')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:11.301119Z\",\"iopub.execute_input\":\"2025-06-09T05:25:11.301708Z\",\"iopub.status.idle\":\"2025-06-09T05:25:11.544221Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:11.301680Z\",\"shell.execute_reply\":\"2025-06-09T05:25:11.543226Z\"}}\n# Violin plot for Stress Levels by Gender\nplt.figure(figsize=(8,5))\nsns.violinplot(x='Gender', y='Stress_Level', data=df, palette='Set2')\nplt.title('Stress Levels by Gender')\nplt.xlabel('Gender')\nplt.ylabel('Stress Level')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:11.545345Z\",\"iopub.execute_input\":\"2025-06-09T05:25:11.545632Z\",\"iopub.status.idle\":\"2025-06-09T05:25:12.594669Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:11.545599Z\",\"shell.execute_reply\":\"2025-06-09T05:25:12.593771Z\"}}\n# Scatter plot for Stress Level vs Social Media Usage Hours\nplt.figure(figsize=(8,5))\nsns.scatterplot(x='Social_Media_Usage_Hours', y='Stress_Level', data=df, hue='Gender', palette='Set1')\nplt.title('Stress Level vs Social Media Usage Hours')\nplt.xlabel('Social Media Usage Hours')\nplt.ylabel('Stress Level')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:12.597845Z\",\"iopub.execute_input\":\"2025-06-09T05:25:12.598120Z\",\"iopub.status.idle\":\"2025-06-09T05:25:12.804622Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:12.598097Z\",\"shell.execute_reply\":\"2025-06-09T05:25:12.803773Z\"}}\n# Count plot for Work Environment Impact by Mental Health Status\nplt.figure(figsize=(8,5))\nsns.countplot(x='Work_Environment_Impact', hue='Mental_Health_Status', data=df, palette='Set3')\nplt.title('Work Environment Impact by Mental Health Status')\nplt.xlabel('Work Environment Impact')\nplt.ylabel('Count')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:12.805497Z\",\"iopub.execute_input\":\"2025-06-09T05:25:12.805800Z\",\"iopub.status.idle\":\"2025-06-09T05:25:13.614948Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:12.805781Z\",\"shell.execute_reply\":\"2025-06-09T05:25:13.614009Z\"}}\n# Scatter plot for Age vs Stress Level\nplt.figure(figsize=(8,5))\nsns.scatterplot(x='Age', y='Stress_Level', data=df, hue='Mental_Health_Status', palette='Set2')\nplt.title('Age vs Stress Level')\nplt.xlabel('Age')\nplt.ylabel('Stress Level')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:13.615943Z\",\"iopub.execute_input\":\"2025-06-09T05:25:13.616288Z\",\"iopub.status.idle\":\"2025-06-09T05:25:13.804623Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:13.616262Z\",\"shell.execute_reply\":\"2025-06-09T05:25:13.803883Z\"}}\n# Box plot for Social Media Usage Hours by Mental Health Status\nplt.figure(figsize=(8,5))\nsns.boxplot(x='Mental_Health_Status', y='Social_Media_Usage_Hours', data=df, palette='Set2')\nplt.title('Social Media Usage Hours by Mental Health Status')\nplt.xlabel('Mental Health Status')\nplt.ylabel('Social Media Usage Hours')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:13.805526Z\",\"iopub.execute_input\":\"2025-06-09T05:25:13.805822Z\",\"iopub.status.idle\":\"2025-06-09T05:25:13.975312Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:13.805793Z\",\"shell.execute_reply\":\"2025-06-09T05:25:13.974367Z\"}}\n# Box plot for Gaming Hours by Mental Health Status\nplt.figure(figsize=(8,5))\nsns.boxplot(x='Mental_Health_Status', y='Gaming_Hours', data=df, palette='Set2')\nplt.title('Gaming Hours by Mental Health Status')\nplt.xlabel('Mental Health Status')\nplt.ylabel('Gaming Hours')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:13.976116Z\",\"iopub.execute_input\":\"2025-06-09T05:25:13.976414Z\",\"iopub.status.idle\":\"2025-06-09T05:25:15.640933Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:13.976394Z\",\"shell.execute_reply\":\"2025-06-09T05:25:15.639900Z\"}}\ndf = df.groupby(['Gender','Mental_Health_Status', 'Stress_Level']).agg({\n    'Screen_Time_Hours': 'mean',\n    'Sleep_Hours': 'mean',\n    'Technology_Usage_Hours':'mean',\n    'Social_Media_Usage_Hours': 'mean',\n    'Gaming_Hours': 'mean',\n    'Physical_Activity_Hours':'mean'\n}).reset_index()\n\n# Visualizes the relationships between technology usage and mental health status\ndef mental_health(df):\n    # Set the figure size\n    plt.figure(figsize=(20, 12))\n    \n    # Screen Time Distribution by Mental Health Status\n    plt.subplot(2, 2, 1)\n   # Used subplot to create multiple plots in one figure\n   # Created a 2x2 grid and placed this plot in the top-left\n    sns.boxplot(data=df, x='Mental_Health_Status', y='Screen_Time_Hours', \n                hue='Gender', palette='Set2')\n    plt.title('Screen Time Distribution by Mental Health Status', size=12)\n    plt.xticks(rotation=45)\n    # Rotated x-axis labels with xticks\n    \n    # Sleep Hours by Stress Level\n    plt.subplot(2, 2, 2)\n    sns.violinplot(data=df, x='Stress_Level', y='Sleep_Hours', \n                  hue='Gender', palette='Set3')\n    plt.title('Sleep Duration by Stress Level', size=12)\n    plt.xticks(rotation=45)\n    \n    # Social Media Usage by Mental Health Status\n    plt.subplot(2, 2, 3)\n    sns.barplot(data=df, x='Mental_Health_Status', y='Social_Media_Usage_Hours',\n                hue='Stress_Level', palette='husl')\n    plt.title('Social Media Usage by Mental Health Status', size=12)\n    plt.xticks(rotation=45)\n\n    # Relationship Between Gaming Hours and Physical Activity\n    plt.subplot(2, 2, 4)\n    sns.scatterplot(data=df, x='Gaming_Hours', y='Physical_Activity_Hours',\n                    hue='Mental_Health_Status', style='Gender', s=100)\n    plt.title('Relationship Between Gaming Hours and Physical Activity', size=12)\n  \n\n    \n    \n    plt.tight_layout()\n    plt.show()\n\nmental_health(df)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:15.641931Z\",\"iopub.execute_input\":\"2025-06-09T05:25:15.642227Z\",\"iopub.status.idle\":\"2025-06-09T05:25:15.655734Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:15.642206Z\",\"shell.execute_reply\":\"2025-06-09T05:25:15.655034Z\"}}\nnumeric_df = df.select_dtypes(include=['int64','float64'])\nnumeric_df.corr()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:15.656519Z\",\"iopub.execute_input\":\"2025-06-09T05:25:15.656754Z\",\"iopub.status.idle\":\"2025-06-09T05:25:16.050761Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:15.656727Z\",\"shell.execute_reply\":\"2025-06-09T05:25:16.049947Z\"}}\nplt.figure(figsize=(20, 8))\nsns.heatmap(numeric_df.corr(numeric_only=True), annot=True, cmap='coolwarm')\nplt.title(\"Correlation\")\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:16.051831Z\",\"iopub.execute_input\":\"2025-06-09T05:25:16.052173Z\",\"iopub.status.idle\":\"2025-06-09T05:25:17.034625Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:16.052125Z\",\"shell.execute_reply\":\"2025-06-09T05:25:17.033520Z\"}}\ndef hist_impression(numeric_df):\n    plt.figure(figsize=(20, 12))\n    \n    # Screen Time Distribution\n    plt.subplot(2, 2, 1)\n    sns.histplot(data=numeric_df, x='Screen_Time_Hours', color='red', kde=True)\n    plt.title('Screen Time', size=12)\n    plt.xticks(rotation=45)\n    \n    # Technology Usage Distribution\n    plt.subplot(2, 2, 2)\n    sns.histplot(data=numeric_df, x='Technology_Usage_Hours', color='green', kde=True)\n    plt.title('Technology Usage', size=12)\n    plt.xticks(rotation=45)\n    \n    # Social Media Usage Distribution\n    plt.subplot(2, 2, 3)\n    sns.histplot(data=numeric_df, x='Social_Media_Usage_Hours', color='blue', kde=True)\n    plt.title('Social Media Usage', size=12)\n    plt.xticks(rotation=45)\n    \n    # Physical Activity Distribution\n    plt.subplot(2, 2, 4)\n    sns.histplot(data=numeric_df, x='Physical_Activity_Hours', color='purple', kde=True)\n    plt.title('Physical Activity', size=12)\n    plt.xticks(rotation=45)\n    \n    plt.tight_layout()\n    plt.show()\n\nhist_impression(numeric_df)\n\n\n# %% [markdown]\n# Machine Learning \n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:17.035743Z\",\"iopub.execute_input\":\"2025-06-09T05:25:17.036015Z\",\"iopub.status.idle\":\"2025-06-09T05:25:17.047121Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:17.035995Z\",\"shell.execute_reply\":\"2025-06-09T05:25:17.046378Z\"}}\nnumeric_df.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:17.048008Z\",\"iopub.execute_input\":\"2025-06-09T05:25:17.048765Z\",\"iopub.status.idle\":\"2025-06-09T05:25:17.061895Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:17.048737Z\",\"shell.execute_reply\":\"2025-06-09T05:25:17.061069Z\"}}\ndf['Mental_Health_Status']\n\nle = LabelEncoder()\ndf['Mental_Health_Status'] = le.fit_transform(df['Mental_Health_Status'])\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:17.062801Z\",\"iopub.execute_input\":\"2025-06-09T05:25:17.063090Z\",\"iopub.status.idle\":\"2025-06-09T05:25:17.079880Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:17.063068Z\",\"shell.execute_reply\":\"2025-06-09T05:25:17.079000Z\"}}\nX = numeric_df[['Screen_Time_Hours', 'Sleep_Hours', 'Technology_Usage_Hours', 'Social_Media_Usage_Hours','Physical_Activity_Hours']]\ny = df['Stress_Level']\n\n# %% [markdown]\n# Scaling dataset\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:17.080779Z\",\"iopub.execute_input\":\"2025-06-09T05:25:17.081066Z\",\"iopub.status.idle\":\"2025-06-09T05:25:17.100347Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:17.081043Z\",\"shell.execute_reply\":\"2025-06-09T05:25:17.099349Z\"}}\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(X)\n\n# %% [markdown]\n# Train, test, split\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:17.101201Z\",\"iopub.execute_input\":\"2025-06-09T05:25:17.101426Z\",\"iopub.status.idle\":\"2025-06-09T05:25:17.117686Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:17.101407Z\",\"shell.execute_reply\":\"2025-06-09T05:25:17.116814Z\"}}\nX_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)\n\n# %% [markdown]\n# Logistic Regression\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:17.118554Z\",\"iopub.execute_input\":\"2025-06-09T05:25:17.118855Z\",\"iopub.status.idle\":\"2025-06-09T05:25:18.389725Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:17.118828Z\",\"shell.execute_reply\":\"2025-06-09T05:25:18.388707Z\"}}\n# 1. Create a pipeline (scaling + logistic regression)\npipeline = Pipeline([\n    ('logreg', LogisticRegression())\n])\n\n# 2. Define the parameter grid\nparam_grid = {\n    'logreg__C': [0.1, 1, 10],             # Regularization strength\n    'logreg__penalty': ['l1', 'l2'],                 # Type of regularization\n    'logreg__solver': ['liblinear', 'saga'],         # Solvers that support l1 and l2\n}\n\n# 3. Set up the grid search\ngrid = GridSearchCV(\n    estimator=pipeline,\n    param_grid=param_grid,\n    cv=5,                         # 5-fold cross-validation\n    scoring='accuracy',           # or 'f1', 'roc_auc', etc.\n    verbose=1,\n    n_jobs=-1                     # Use all CPU cores\n)\n\n# 4. Fit to training data\ngrid.fit(X_train, y_train)\n\n# 5. Best parameters and accuracy\nprint(\"Best Parameters:\", grid.best_params_)\nprint(\"Best Accuracy:\", grid.best_score_)\n\n# 6. Evaluate on test set\ny_pred = grid.predict(X_test)\nprint(classification_report(y_test, y_pred))\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:25:18.391787Z\",\"iopub.execute_input\":\"2025-06-09T05:25:18.392092Z\",\"iopub.status.idle\":\"2025-06-09T05:25:18.608812Z\",\"shell.execute_reply.started\":\"2025-06-09T05:25:18.392064Z\",\"shell.execute_reply\":\"2025-06-09T05:25:18.607958Z\"}}\ncm = confusion_matrix(y_test, y_pred)\ndisp = ConfusionMatrixDisplay(confusion_matrix=cm)\ndisp.plot(cmap=plt.cm.viridis)\nplt.title('Logistic Regression: Prediciting Mental Health Status Matrix')\nplt.show()\n\n# %% [markdown]\n# Random Forest and Gradient Boosting Classifier\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-06-09T05:36:08.636619Z\",\"iopub.execute_input\":\"2025-06-09T05:36:08.637245Z\",\"iopub.status.idle\":\"2025-06-09T05:36:10.034955Z\",\"shell.execute_reply.started\":\"2025-06-09T05:36:08.637217Z\",\"shell.execute_reply\":\"2025-06-09T05:36:10.034225Z\"}}\n# Split data, initialize models, fit, predict\nX_train, X_test, y_train, y_test_rf = train_test_split(X_scaled, y, test_size=0.2, random_state=42)\nrf = RandomForestClassifier(random_state=42, n_estimators=500, max_depth=10, min_samples_split=50)\nrf.fit(X_train, y_train)\nrf_pred = rf.predict(X_test)\n\n# Split data, initialize models, fit, predict\nX_train, X_test, y_train, y_test_gb = train_test_split(X_scaled, y, test_size=0.2, random_state=42)\ngb = GradientBoostingClassifier(max_depth = 5)\ngb.fit(X_train, y_train)\ngb_pred = gb.predict(X_test)\n\n# Confusion Matrices\nfig, ax = plt.subplots(1, 2, figsize=(12, 5))\nConfusionMatrixDisplay.from_predictions(y_test_rf, rf_pred, ax=ax[0], cmap='Blues')\nax[0].set_title('Random Forest Confusion Matrix')\n\nConfusionMatrixDisplay.from_predictions(y_test_gb, gb_pred, ax=ax[1], cmap='Greens')\nax[1].set_title('Gradient Boosting Confusion Matrix')\nplt.tight_layout()\nplt.show()\n\n\n# Print classification metrics\nprint(\"Accuracy Score:\", accuracy_score(y_test_rf, rf_pred))\nprint(\"\\nClassification Report (Random Forest):\")\nprint(classification_report(y_test_rf, gb_pred))\n\n# Print classification metrics\nprint(\"Accuracy Score:\", accuracy_score(y_test_gb, gb_pred))\nprint(\"\\nClassification Report (Gradient Boosting):\")\nprint(classification_report(y_test_gb, gb_pred))\n","metadata":{"_uuid":"14e1dc72-329c-4109-b60a-3c4f815e9d12","_cell_guid":"481df48b-7209-4e59-873c-9bbda03328a4","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null}]}